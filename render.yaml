services:
  - type: web
    name: smart-resume-matcher
    env: python
    buildCommand: ./build.sh
    startCommand: ./start_gunicorn.sh
    disk:
      name: smart-resume-data
      mountPath: /var/data
      sizeGB: 1
    envVars:
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: false
      - key: ALLOWED_HOSTS
        value: ".render.com"
      - key: REDIS_URL
        fromService:
          name: smart-resume-redis
          type: redis
          property: connectionString
      - key: PYTHON_VERSION
        value: 3.11.0

  - type: worker
    name: smart-resume-celery-worker
    env: python
    buildCommand: ./build.sh
    startCommand: >
      bash -c "if [ -d \"smart_resume_matcher\" ]; then cd smart_resume_matcher; fi && 
      celery -A config worker --loglevel=info"
    envVars:
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: false
      - key: REDIS_URL
        fromService:
          name: smart-resume-redis
          type: redis
          property: connectionString
      - key: PYTHON_VERSION
        value: 3.11.0
  
  - type: worker
    name: smart-resume-celery-beat
    env: python
    buildCommand: ./build.sh
    startCommand: >
      bash -c "if [ -d \"smart_resume_matcher\" ]; then cd smart_resume_matcher; fi && 
      celery -A config beat --loglevel=info"
    envVars:
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: false
      - key: REDIS_URL
        fromService:
          name: smart-resume-redis
          type: redis
          property: connectionString
      - key: PYTHON_VERSION
        value: 3.11.0

  - type: redis
    name: smart-resume-redis
    plan: free
    maxmemoryPolicy: volatile-lru
